name: Deploy NestJS to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci --no-fund --silent

      - name: Generate Prisma client
        run: npx prisma generate

      - name: Build NestJS app
        run: npm run build

      - name: Copy files to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: |
            dist/**
            package.json
            package-lock.json
            prisma/**
          target: "/var/www/baby-monitoring-server"

      - name: Create .env file on EC2
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            cd /var/www/baby-monitoring-server
            echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > .env
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
            echo "PORT=3000" >> .env

      - name: Deploy and restart app on EC2
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          command_timeout: 60m
          script: |
            cd /var/www/baby-monitoring-server
            # Clean install ensures no missing deps
            npm ci --no-fund --silent

            # Ensure Prisma schema exists and client is generated
            if [ -f "prisma/schema.prisma" ]; then
              npx prisma generate --schema=prisma/schema.prisma
              npx prisma migrate deploy
            else
              echo "⚠️ WARNING: prisma/schema.prisma not found, skipping migration!"
            fi

            # Restart app with zero downtime if possible
            pm2 restart baby-monitoring-server || pm2 start dist/main.js --name baby-monitoring-server
            pm2 save
            pm2 status
